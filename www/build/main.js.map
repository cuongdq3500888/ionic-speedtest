{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/services/apiMeterGraphService.ts","../../src/services/apiSpeedTestService.ts","../../src/services/apiAuthService.ts","../../src/services/apiLocationService.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../util (ignored)","webpack:///util (ignored)?f914","../../buffer (ignored)","../../crypto (ignored)","../../src/services/apiImageService.ts","../../src/services/apiStorageService.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 160;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 160\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 201;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 201\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { NavController, AlertController } from 'ionic-angular';\r\n\r\nimport { ApiGraphService } from '../../services/apiMeterGraphService'\r\nimport { ApiSpeedTestService } from '../../services/apiSpeedTestService'\r\nimport { ApiAuthService } from '../../services/apiAuthService'\r\nimport { ApiLocationService } from '../../services/apiLocationService'\r\n\r\nvar worker = null;\r\nvar isRuning: boolean = false;\r\nvar idx = 0;\r\n\r\n//khai bao thanh phan cua trang nay\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\n\r\n//class dieu khien rieng cua no\r\nexport class HomePage {\r\n\r\n  public objISP: any;\r\n\r\n  public objMeter = {\r\n    graphName: 'Speedtest',\r\n    unit: 'Mbps/ms/km',\r\n  }\r\n\r\n  public results = [];\r\n  public result;\r\n  public server = {\r\n    NAME: \"amazone-heroku-usa\"\r\n    ,SERVER_URL: \"https://cuongdq-speedtest.herokuapp.com\"\r\n    ,DOWNLOAD: \"/speedtest/download\"\r\n    ,GET_IP: \"/speedtest/get-ip\"\r\n    ,PING: \"/speedtest/empty\"\r\n    ,UPLOAD: \"/speedtest/empty\"\r\n    ,LOCATION: \"30.0866,-94.1274\"\r\n    ,DESCRITPTION: \" Máy chủ test internet Tại Mỹ, herokuapp.com\"\r\n  };\r\n  public serverList = [this.server];\r\n\r\n  public selectOptions = {\r\n    title: 'SERVER LIST',\r\n    subTitle: 'Select a server',\r\n    mode: 'md'\r\n  };\r\n\r\n  constructor(public navCtrl: NavController,\r\n    private apiLocation: ApiLocationService,\r\n    private apiGraph: ApiGraphService,\r\n    private apiAuth: ApiAuthService,\r\n    private alertCtrl: AlertController,\r\n    private apiHttp: ApiSpeedTestService) { }\r\n\r\n  ngOnInit() { \r\n\r\n    this.resetContermet(); \r\n    this.server = this.serverList[0];\r\n    this.apiAuth.getSpeedtestServerList()\r\n    .then(data=>{\r\n      let list;\r\n        list = data;\r\n        try{\r\n          if (list) this.serverList = list;\r\n          this.server = this.serverList[0];\r\n        }catch(e){}\r\n    })\r\n    .catch(err=>{\r\n      console.log(err); //loi khong lay duoc danh sach server\r\n    })\r\n  }\r\n\r\n  resetContermet(){\r\n    this.apiGraph.initUI();\r\n    this.objMeter = {\r\n      graphName: 'Speedtest',\r\n      unit: 'Mbps/ms/km',\r\n    }\r\n    this.apiGraph.updateUI({ state: 0, contermet: '...', progress: 0 });\r\n  }\r\n  clearRuning() {\r\n    //speedtest xong\r\n    this.alertCtrl.create({\r\n      title: 'Speedtest finish',\r\n      subTitle: 'Thank you for your test with us! See the result and share...',\r\n      buttons: ['OK']\r\n    }).present();\r\n\r\n    this.resetContermet();\r\n\r\n    isRuning = false;\r\n    this.apiGraph.I(\"startStopBtn\").className = \"\";\r\n    worker = null;\r\n    this.result = null;\r\n  }\r\n\r\n  startStop() {\r\n    isRuning = !isRuning;\r\n    if (!isRuning) {\r\n      this.apiGraph.I(\"startStopBtn\").className = \"\";\r\n      //dung test\r\n    } else {\r\n      //lay vi tri de ghi ket qua\r\n      this.apiGraph.I(\"startStopBtn\").className = \"running\";\r\n      //bat dau chay\r\n      worker = new Worker('worker-message.js');\r\n      this.apiHttp.setWorker(worker);\r\n      this.apiHttp.setServer(this.server);\r\n\r\n      //Thuc hien chu trinh speedTest: getIP, delay, ping, delay, dowload, delay, upload\r\n      this.runTestLoop('_I_P_D_U_S_'); //Get IP, Ping, Download, Upload, Share server, \r\n        \r\n      worker.onmessage = (e) => { this.onMessageProcess(e) }\r\n        \r\n    }\r\n  }\r\n\r\n  /**\r\n   *   \r\n   * @param e \r\n   */\r\n  onMessageProcess(e) {\r\n    //doi tuong khong phai chuoi nen khong can phai parse\r\n    let objCommand = e.data;\r\n    //cap nhap nhan\r\n    if (objCommand.command === 'init') {\r\n      this.initUI(objCommand.data);\r\n    } else if (objCommand.command === 'progress') {\r\n      this.apiGraph.updateUI({ state: 1, contermet: objCommand.data.contermet, progress: objCommand.data.progress });\r\n    } else if (objCommand.command === 'finish') {\r\n      this.updateResults(objCommand.work, objCommand.data);\r\n    }\r\n  }\r\n\r\n  initUI(formWork) {\r\n    //gan ten cho thang do\r\n    this.objMeter = {\r\n      graphName: formWork.graphName,\r\n      unit: formWork.unit,\r\n    }\r\n    //gan mau cho thang do\r\n    this.apiGraph.initUI({\r\n      statusColor: formWork.statusColor,\r\n      backgroundColor: formWork.backgroundColor,\r\n      progressColor: formWork.progressColor\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * @param work \r\n   * @param d \r\n   *  \r\n   */\r\n  updateResults(work, d) {\r\n    //kiem tra phien dau tien cua no\r\n    if (!this.result){\r\n      this.result={}; //khoi dau mot phien test moi\r\n      this.result.id = ++idx; //id moi khoi tao\r\n    }else{\r\n      //da chay phien truoc co roi thi lay tu trong ra\r\n      this.result = this.results.pop();\r\n    }\r\n\r\n    //co cong viec va ket qua hoan thanh\r\n    if (work == 'ip') {\r\n      //cong viec hoan thanh lay ip\r\n      let dt = new Date();\r\n      let time = dt.toISOString().replace(/T/, ' ').replace(/\\..+/, '')\r\n                + \" GMT\"\r\n                + dt.getTimezoneOffset() / 60\r\n                + \" Local: \"\r\n                + dt.toLocaleTimeString();\r\n      this.result.ip = d.ip;\r\n      this.result.time = time;\r\n      this.result.server = (d.server?d.server:this.server.SERVER_URL);\r\n      this.results.push(this.result);\r\n    } else if (work == 'download') {\r\n      this.result.download = d.speed;\r\n      this.results.push(this.result);\r\n    } else if (work == 'upload') {\r\n      this.result.upload = d.speed;\r\n      this.results.push(this.result);\r\n    } else if (work == 'ping') {\r\n      this.result.ping = d.ping;\r\n      this.result.jitter = d.jitter;\r\n      this.results.push(this.result);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * '_I_U' | '_I_P_D_U'\r\n   * @param test_order \r\n   */\r\n  runTestLoop(test_order: string){\r\n    const delay = 1000;\r\n    var nextIndex = 0;\r\n\r\n    this.apiLocation.getCurrentLocation()\r\n    .then(pos=>{\r\n      if (!this.result){\r\n        this.result={}; //khoi dau mot phien test moi\r\n        this.result.id = ++idx; //id moi khoi tao\r\n        this.result.start_location = pos;\r\n        this.result.start_time = new Date().getTime();\r\n        this.results.push(this.result);\r\n      }\r\n    })\r\n    .catch(err=>{ });\r\n\r\n    var runNextTest = function () {\r\n      let command = test_order.charAt(nextIndex);\r\n      \r\n      switch (command) {\r\n        case '_': { nextIndex++; setTimeout(runNextTest, delay); } break;\r\n        case 'S': { nextIndex++; this.shareResult(); setTimeout(runNextTest, delay); } break;\r\n        case 'I': { \r\n                    nextIndex++; \r\n                    if (!isRuning) { \r\n                        runNextTest(); \r\n                        return; \r\n                    }\r\n                    this.apiHttp.getISP()\r\n                        .then(data => {\r\n                          this.objISP = data; //ghi ket qua duoi dong ho do\r\n                          runNextTest();\r\n                          })\r\n                          .catch(err => {\r\n                            runNextTest();\r\n                          });\r\n                  } \r\n            break;\r\n        case 'P': { \r\n                    nextIndex++; \r\n                    if (!isRuning) { \r\n                        runNextTest(); \r\n                        return; \r\n                    }\r\n                    this.apiHttp.ping()//.multiDownload()\r\n                      .then(result => {\r\n                        // console.log('Ping Data: ');\r\n                        // console.log(result);\r\n                        runNextTest();\r\n                      })\r\n                      .catch(err => {\r\n                        // console.log('Ping Error: ');\r\n                        // console.log(err);\r\n                        runNextTest();\r\n                      });\r\n                  } \r\n            break;\r\n        case 'D': { \r\n                    nextIndex++; \r\n                    if (!isRuning) { \r\n                        runNextTest(); \r\n                        return; \r\n                    }\r\n                    \r\n                    this.apiHttp.download()\r\n                      .then(result => {\r\n                        // console.log('Download Data: ');\r\n                        // console.log(result);\r\n                        runNextTest();\r\n                      })\r\n                      .catch(err => {\r\n                        // console.log('Download Error: ');\r\n                        // console.log(err);\r\n                        runNextTest();\r\n                      });\r\n                  } \r\n            break;\r\n        case 'U': { \r\n                    nextIndex++; \r\n                    if (!isRuning) { \r\n                        runNextTest(); \r\n                        return; \r\n                    }\r\n                    this.apiHttp.upload()\r\n                      .then(result => {\r\n                        // console.log('Upload Data: ');\r\n                        // console.log(result);\r\n                        runNextTest();\r\n                      })\r\n                      .catch(err => {\r\n                        // console.log('Upload Error: ');\r\n                        // console.log(err);\r\n                        runNextTest();\r\n                      });\r\n                  } \r\n            break;\r\n        default: nextIndex++;\r\n      }\r\n\r\n      if (!command) this.clearRuning();\r\n\r\n    }.bind(this) //thuc hien gan this nay vao moi goi lenh duoc\r\n\r\n    runNextTest();\r\n  }\r\n\r\n  //gui ket qua cho may chu\r\n  shareResult(){\r\n    //lay vi tri ket thuc chu trinh de ghi lai vi tri ket thuc test\r\n    this.apiLocation.getCurrentLocation()\r\n    .then(pos=>{\r\n      if (this.result){\r\n        this.result = this.results.pop();\r\n        this.result.end_location = pos;\r\n        this.result.end_time = new Date().getTime();\r\n        this.results.push(this.result);\r\n      }\r\n      //xem kq --send\r\n      console.log(this.result);\r\n\r\n    })\r\n    .catch(err=>{\r\n      //console.log(err);\r\n    });\r\n\r\n  }\r\n\r\n  //gui ket qua cho nguoi dung\r\n  shareResults(){\r\n    \r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ApiGraphService {\r\n    \r\n    private graphColor = {\r\n        statusColor: \"#309030\",\r\n        backgroundColor : \"#E0E0E0\",\r\n        progressColor : \"#EEEEEE\"\r\n    };\r\n\r\n    constructor() { }\r\n    \r\n    initUI(colors?: {statusColor: string,\r\n                    backgroundColor : string,\r\n                    progressColor : string}) {\r\n        if (colors) this.graphColor = colors; //doi mau default\r\n        this.drawMeter(this.I(\"dlMeter\"), 0, 0); \r\n        this.I(\"dlText\").textContent = \"\";\r\n    }\r\n\r\n    I(id) { return document.getElementById(id); }\r\n\r\n    drawMeter(c, amount, progress, colors?: {statusColor: string,\r\n                                             backgroundColor : string,\r\n                                             progressColor : string}) {\r\n\r\n        var myColors = (colors)?colors:this.graphColor;\r\n        \r\n        var ctx = c.getContext(\"2d\");\r\n        var dp = window.devicePixelRatio || 1;\r\n        var cw = c.clientWidth * dp, ch = c.clientHeight * dp;\r\n        var sizScale = ch * 0.0055;\r\n        if (c.width == cw && c.height == ch) {\r\n            ctx.clearRect(0, 0, cw, ch);\r\n        } else {\r\n            c.width = cw;\r\n            c.height = ch;\r\n        }\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = myColors.backgroundColor;\r\n        ctx.lineWidth = 16 * sizScale;\r\n        ctx.arc(c.width / 2, c.height - 58 * sizScale, c.height / 1.8 - ctx.lineWidth, -Math.PI * 1.1, Math.PI * 0.1);\r\n        ctx.stroke();\r\n        ctx.beginPath();\r\n        ctx.strokeStyle = myColors.statusColor;\r\n        ctx.lineWidth = 16 * sizScale;\r\n        ctx.arc(c.width / 2, c.height - 58 * sizScale, c.height / 1.8 - ctx.lineWidth, -Math.PI * 1.1, amount * Math.PI * 1.2 - Math.PI * 1.1);\r\n        ctx.stroke();\r\n        if (typeof progress !== \"undefined\") {\r\n            ctx.fillStyle = myColors.progressColor;\r\n            ctx.fillRect(c.width * 0.3, c.height - 16 * sizScale, c.width * 0.4 * progress, 4 * sizScale);\r\n        }\r\n    }\r\n\r\n    mbpsToAmount(s) {\r\n        return 1 - (1 / (Math.pow(1.3, Math.sqrt(s))));\r\n    }\r\n\r\n    msToAmount(s) {\r\n        return 1 - (1 / (Math.pow(1.08, Math.sqrt(s))));\r\n    }\r\n\r\n    updateUI(data: {state: 0|1, contermet: string, progress: number}) {\r\n        this.I(\"dlText\").textContent = (data.state == 1 && data.contermet ==  '0') ? \"...\" : data.contermet;\r\n        this.drawMeter(this.I(\"dlMeter\"), this.mbpsToAmount(Number(Number(data.contermet) * (data.state == 1 ? this.oscillate() : 1))), Number(data.progress));  \r\n    }\r\n\r\n    oscillate() {\r\n        return 1 + 0.02 * Math.sin(Date.now() / 100);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiMeterGraphService.ts","\r\nimport { HttpClient, HttpRequest, HttpEvent, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n//ung dung cuongdq-upload post any\r\nvar speedtestServer = {\r\n       NAME: \"amazone-heroku-usa\"\r\n      ,SERVER_URL: \"https://cuongdq-speedtest.herokuapp.com\"\r\n      ,DOWNLOAD: \"/speedtest/download\"\r\n      ,GET_IP: \"/speedtest/get-ip\"\r\n      ,PING: \"/speedtest/empty\"\r\n      ,UPLOAD: \"/speedtest/empty\"\r\n      ,LOCATION: \"30.0866,-94.1274\"\r\n      ,DESCRITPTION: \" Máy chủ test internet Tại Mỹ, herokuapp.com\"\r\n}\r\n\r\nvar contermet;\r\nvar xhr = null; //tao da luong de truy cap server\r\nvar interval = null;\r\nvar totLoaded = 0.0;\r\nvar progress = 0.0;\r\n\r\n@Injectable()\r\nexport class ApiSpeedTestService {\r\n\r\n    private worker;\r\n\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    //bien worker de truyen message giua cac thread voi nhau\r\n    setWorker(worker) {\r\n        this.worker = worker;\r\n    }\r\n\r\n    setServer(server) {\r\n        //console.log(server);\r\n        speedtestServer = server;\r\n    }\r\n\r\n    //tham tham so cho url ? hoac & theo bien\r\n    url_sep(url) { return url.match(/\\?/) ? '&' : '?'; }\r\n\r\n    /**\r\n     * Su dung de truyen du lieu online den worker ...\r\n     * @param command \r\n     * @param work \r\n     * @param data \r\n     */\r\n    postCommand(command: 'init' | 'progress' | 'finish'\r\n        , work: 'ip' | 'ping' | 'download' | 'upload'\r\n        , data?:\r\n            { graphName: string, unit: string, backgroundColor: string, statusColor: string, progressColor: string } //for init\r\n            | { progress: number, contermet: string } //for progress\r\n            | { ip: string, server: string, duration: number } //for work ip \r\n            | { ping: number, jitter: number } //for work ping\r\n            | { speed: number } //for work dowload|upload\r\n    ) {\r\n        let objData;\r\n        objData = {};\r\n        if (command === 'init') {\r\n            if (work === 'ip') {\r\n                objData.graphName = \"Check your IP\";\r\n                objData.unit = \"ms\";\r\n                objData.statusColor = \"#AA6060\";\r\n                objData.backgroundColor = \"#E0E0E0\";\r\n                objData.progressColor = \"#EEEEEE\"\r\n            } else if (work === 'ping') {\r\n                objData.graphName = \"Ping\";\r\n                objData.unit = \"ms\";\r\n                objData.statusColor = \"#AA6060\";\r\n                objData.backgroundColor = \"#E0E0E0\";\r\n                objData.progressColor = \"#EEEEEE\"\r\n            } else if (work === 'download') {\r\n                objData.graphName = \"Download\";\r\n                objData.unit = \"Mbps\";\r\n                objData.statusColor = \"#6060AA\";\r\n                objData.backgroundColor = \"#E0E0E0\";\r\n                objData.progressColor = \"#EEEEEE\"\r\n            } else if (work === 'upload') {\r\n                objData.graphName = \"Upload\";\r\n                objData.unit = \"Mbps\";\r\n                objData.statusColor = \"#309030\";\r\n                objData.backgroundColor = \"#E0E0E0\";\r\n                objData.progressColor = \"#EEEEEE\"\r\n            }\r\n        }\r\n        let objCommand = {\r\n            command: command,\r\n            work: work,\r\n            data: (data) ? data : objData //thay the du lieu data khi khoi tao \r\n        }\r\n        if (this.worker) {\r\n            this.worker.postMessage(JSON.stringify(objCommand));\r\n        }\r\n    }\r\n\r\n    //clear Request khi test vuot qua thoi gian \r\n    clearRequests() {\r\n        //tlog('stopping pending XHRs')\r\n        //console.log('xoa request di:');\r\n        if (xhr) {\r\n            for (var i = 0; i < xhr.length; i++) {\r\n                try { xhr[i].onprogress = null; xhr[i].onload = null; xhr[i].onerror = null } catch (e) { }\r\n                try { xhr[i].upload.onprogress = null; xhr[i].upload.onload = null; xhr[i].upload.onerror = null } catch (e) { }\r\n                try { xhr[i].abort() } catch (e) { }\r\n                try { xhr[i].cancel() } catch (e) { }\r\n                try { xhr[i].unsubscribe() } catch (e) { }\r\n                try { delete (xhr[i]) } catch (e) { }\r\n            }\r\n            xhr = null;\r\n        }\r\n        clearInterval(interval); //xoa luong thoi gian de chay cua no\r\n    }\r\n\r\n    downloadOne(i, step) {\r\n        return new Promise((resolve, reject) => {\r\n            var prevLoaded = 0 // number of bytes loaded last time onprogress was called\r\n            //var garbagePhp_chunkSize = 20;\r\n            var req = new HttpRequest('GET',\r\n            speedtestServer.SERVER_URL + speedtestServer.DOWNLOAD + this.url_sep(speedtestServer.DOWNLOAD) + \"r=\" + Math.random(), \r\n            //them chuoi random de khong bi cach\r\n                {\r\n                    reportProgress: true,\r\n                    responseType: 'arraybuffer'\r\n                }); \r\n            xhr[i] = this.httpClient.request(req)\r\n                .subscribe((event: HttpEvent<any>) => {\r\n                    switch (event.type) {\r\n                        case HttpEventType.Sent:\r\n                            break;\r\n                        case HttpEventType.ResponseHeader:\r\n                            break;\r\n                        case HttpEventType.UploadProgress:\r\n                            break;\r\n                        case HttpEventType.DownloadProgress:\r\n                            var loadDiff = event.loaded <= 0 ? 0 : (event.loaded - prevLoaded);\r\n                            if (isNaN(loadDiff) || !isFinite(loadDiff) || loadDiff < 0) {\r\n                                reject({\r\n                                    code: 403,\r\n                                    message: 'isNaN(loadDiff) || !isFinite(loadDiff) || loadDiff < 0'\r\n                                });\r\n                            }\r\n                            totLoaded += loadDiff;\r\n                            prevLoaded = event.loaded;\r\n                            break;\r\n\r\n                        case HttpEventType.Response:\r\n                            resolve(totLoaded); //da xong mot step tren mot thread tra ve so luong dowload\r\n                            break;\r\n                        default:\r\n                            console.log(event); //tra ve {type:0}\r\n                            break;\r\n                    }\r\n                }, err => {\r\n                    console.log(err);\r\n                    reject(err);\r\n                });\r\n\r\n            xhr[i].cancel = function () {\r\n                reject({ code: 403, message: 'Too Slow network!' })\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    uploadOne(i, step) {\r\n        var xhr_ul_blob_megabytes = 20;\r\n        return new Promise((resolve, reject) => {\r\n            var prevLoaded = 0 // number of bytes loaded last time onprogress was called\r\n\r\n            var r;\r\n            r = new ArrayBuffer(1048576)\r\n            var maxInt = Math.pow(2, 32) - 1;\r\n            try { r = new Uint32Array(r); for (let j = 0; j < r.length; j++)r[j] = Math.random() * maxInt } catch (e) { }\r\n            var reqData = []\r\n            var reqsmall = []\r\n            for (let j = 0; j < xhr_ul_blob_megabytes; j++) reqData.push(r)\r\n            var reqUL = new Blob(reqData)\r\n            r = new ArrayBuffer(262144)\r\n            try { r = new Uint32Array(r); for (let j = 0; j < r.length; j++)r[i] = Math.random() * maxInt } catch (e) { }\r\n            reqsmall.push(r)\r\n            var reqsmallUL = new Blob(reqsmall)\r\n\r\n\r\n            var file = new File([reqsmallUL], 'data.dat')\r\n\r\n            var req = new HttpRequest('POST',\r\n            speedtestServer.SERVER_URL + speedtestServer.UPLOAD + this.url_sep(speedtestServer.UPLOAD) + \"r=\" + Math.random(),\r\n                file,\r\n                { reportProgress: true });\r\n            xhr[i] = this.httpClient.request(req)\r\n                .subscribe((event: HttpEvent<any>) => {\r\n                    switch (event.type) {\r\n                        case HttpEventType.Sent:\r\n                            break;\r\n                        case HttpEventType.ResponseHeader:\r\n                            break;\r\n                        case HttpEventType.UploadProgress:\r\n                            const percentDone = Math.round(100 * event.loaded / event.total);\r\n                            //console.log(`FileUploading... is ${percentDone}% uploaded`);\r\n                            var loadDiff = event.loaded <= 0 ? 0 : (event.loaded - prevLoaded);\r\n                            if (isNaN(loadDiff) || !isFinite(loadDiff) || loadDiff < 0) {\r\n                                reject({\r\n                                    code: 403,\r\n                                    message: 'isNaN(loadDiff) || !isFinite(loadDiff) || loadDiff < 0'\r\n                                });\r\n                            }\r\n                            totLoaded += loadDiff;\r\n                            prevLoaded = event.loaded;\r\n                            break;\r\n                        case HttpEventType.DownloadProgress:\r\n                            break;\r\n                        case HttpEventType.Response:\r\n                            resolve(totLoaded); //da xong mot step tren mot thread tra ve so luong dowload\r\n                            break;\r\n                        default:\r\n                            console.log(event); //tra ve {type:0}\r\n                            break;\r\n                    }\r\n                }, err => {\r\n                    console.log(err);\r\n                    reject(err);\r\n                });\r\n\r\n            xhr[i].cancel = function () {\r\n                reject({ code: 403, message: 'Too Slow network!' })\r\n            }\r\n\r\n        })\r\n    }\r\n    /**\r\n     * \r\n     * @param i mot tien trinh ping goi lenh\r\n     */\r\n    pingOne(i) {\r\n        return new Promise((resolve, reject) => {\r\n\r\n            var req = new HttpRequest('GET',\r\n                speedtestServer.SERVER_URL + speedtestServer.PING + this.url_sep(speedtestServer.PING) + 'r=' + Math.random(), \r\n                //them chuoi random de khong bi cach\r\n                { reportProgress: true });\r\n\r\n            xhr[i] = this.httpClient.request(req)\r\n                .subscribe((event: HttpEvent<any>) => {\r\n                    switch (event.type) {\r\n                        case HttpEventType.Sent:\r\n                            break;\r\n                        case HttpEventType.ResponseHeader:\r\n                            break;\r\n                        case HttpEventType.UploadProgress:\r\n                            break;\r\n                        case HttpEventType.DownloadProgress:\r\n                            break;\r\n                        case HttpEventType.Response:\r\n                            resolve(event); //da xong mot step tra ve event.body nhe\r\n                            break;\r\n                        default:\r\n                            //console.log(event); //tra ve {type:0}\r\n                            break;\r\n                    }\r\n                }, err => {\r\n                    console.log(err);\r\n                    reject(err);\r\n                });\r\n\r\n            xhr[i].cancel = function () {\r\n                reject({ code: 403, message: 'Too Slow network!' })\r\n            }\r\n\r\n        })\r\n    }\r\n    //1. get-IP\r\n\r\n    //cac ham speedtest\r\n    //1. Lay dia chi IP\r\n    getISP() {\r\n\r\n        progress = 0;\r\n        contermet = '...';\r\n        var startT = new Date().getTime(); // timestamp when test was started\r\n        var durationGetIpInSecond = 10;\r\n\r\n        this.postCommand(\"init\", \"ip\");\r\n\r\n        interval = setInterval(function () {\r\n            //console.log('gui thong bao tien trinh: ' + totLoaded);\r\n            var passTime = new Date().getTime() - startT;\r\n            progress = passTime / (durationGetIpInSecond * 1000);\r\n\r\n            this.postCommand(\"progress\", \"ip\", { progress: progress, contermet: contermet });\r\n\r\n            //qua trinh = thoi gian troi qua chia cho thoi gian du dinh chay thu\r\n        }.bind(this), 200); //cu 200ms thi thong bao ket qua cho contermet\r\n\r\n        return this.httpClient.get(\r\n            speedtestServer.SERVER_URL + speedtestServer.GET_IP + this.url_sep(speedtestServer.GET_IP) + \"r=\" + Math.random()\r\n        )\r\n            .toPromise()\r\n            .then(data => {\r\n\r\n                //console.log(data);\r\n\r\n                clearInterval(interval);//reset interval\r\n\r\n                let d;\r\n                d = data;\r\n                d.dlProgress = 1;\r\n                d.dlStatus = progress * 100;\r\n\r\n                this.postCommand(\"finish\", \"ip\", \r\n                    {\r\n                    ip: d.processedString\r\n                    , server: d.server?d.server.ip + ' - ' + d.server.org\r\n                                            + d.server.city + d.server.region\r\n                                            + d.server.country:''\r\n                    , duration: progress * durationGetIpInSecond\r\n                });\r\n\r\n                return data;\r\n            })\r\n    }\r\n\r\n    //2. Test dowload\r\n    /**\r\n     * 10 thread x 20 step\r\n     */\r\n    download() {\r\n        totLoaded = 0.0;\r\n        progress = 0;\r\n        contermet = '...';\r\n        xhr = []; //bat dau tao multithread\r\n        var maxThread = 10; //so luong chay 10 thread\r\n        var maxStep = 20; //moi luong chay qua 20 step\r\n        var durationTestInSecond = 15 //so giay chay test thu\r\n        var maxTime_ms = (durationTestInSecond / 2) * 1000; //thoi gian thu 10 s hoac 20 buoc\r\n\r\n        var delayThread = 300;\r\n        //var oneThreadFuntion = this.downloadOne; //gan ham de chay download\r\n\r\n        var overheadCompensationFactor = 1.06; //can be changed to compensatie for transport overhead. (see doc.md for some other values)\r\n        var useMebibits: false;\r\n\r\n        var graceTimeDone = false; //bo thoi gian parse TCP de tinh toc do cho chinh xac \r\n        var time_dlGraceTime = 1.5 //time to wait in seconds before actually measuring dl speed (wait for TCP window to increase)\r\n        var startT = new Date().getTime(); // timestamp when test was started\r\n\r\n        this.postCommand(\"init\", \"download\");\r\n\r\n        interval = setInterval(function () {\r\n\r\n            //console.log('gui thong bao tien trinh: ' + totLoaded);\r\n            var passTime = new Date().getTime() - startT;\r\n            if (graceTimeDone) progress = passTime / (durationTestInSecond * 1000);\r\n            //reset thoi gian bat dau tinh toan toc doc\r\n            if (!graceTimeDone) {\r\n                if (passTime > 1000 * time_dlGraceTime) {\r\n                    if (totLoaded > 0) { // if the connection is so slow that we didn't get a single chunk yet, do not reset\r\n                        startT = new Date().getTime(); //bat dau tinh thoi gian download\r\n                        totLoaded = 0.0;               //reset bien lai\r\n                    }\r\n                    graceTimeDone = true;\r\n                }\r\n            } else {\r\n                var speed = totLoaded / (passTime / 1000.0)\r\n                contermet = ((speed * 8 * overheadCompensationFactor) / (useMebibits ? 1048576 : 1000000)).toFixed(2) // speed is multiplied by 8 to go from bytes to bits, overhead compensation is applied, then everything is divided by 1048576 or 1000000 to go to megabits/mebibits\r\n\r\n                this.postCommand(\"progress\", \"download\", { progress: progress, contermet: contermet });\r\n\r\n                if (progress >= 1) {\r\n                    console.log('SLOW NETWORK for Download!');\r\n                    this.clearRequests();\r\n                }\r\n            }\r\n\r\n            //qua trinh = thoi gian troi qua chia cho thoi gian du dinh chay thu\r\n        }.bind(this), 200); //cu 200ms thi thong bao ket qua cho contermet\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            startT = new Date().getTime(); // timestamp when test was started\r\n\r\n            var testStream = function (i, delay, step, doneThread) {\r\n                //chay 1 lan delay\r\n                setTimeout(function () {\r\n                    let timeout = new Date().getTime() - startT;\r\n\r\n                    //console.log(\"test thread: \" + i + \", step: \" + step + ', timeout: ' + timeout);\r\n\r\n                    this.downloadOne(i, step) //tien trinh nay chay rat cham neu mang cham\r\n                        .then(total => {\r\n                            /* console.log(\"A Step in a Thread: \" + i + \" finish Total loaded:\");\r\n                            console.log(total); */\r\n                            if (timeout < maxTime_ms && step < maxStep) { //dieu kien nao den truoc \r\n                                //console.log(\"progress \" + step);\r\n                                //resolve('progress ' + i);\r\n                                try { xhr[i].unsubcriber() } catch (e) { } // reset the stream data to empty ram\r\n                                testStream(i, 0, step + 1, doneThread); //goi tiep bien a\r\n                            } else {\r\n                                //console.log(\"finish IN thread: \" + i);\r\n                                //console.log(doneThread);\r\n                                if (doneThread) doneThread(i) //bao xong thread so i\r\n                                //resolve(total); //ket thuc thread voi n step mang tong so tra ve\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            //truong hop da reset ket qua gui ve sau thi\r\n                            //console.log(err);\r\n                            if (doneThread) doneThread(i)\r\n                        }); //goi ham dowload thread i va step \r\n\r\n                }.bind(this), 1 + delay)\r\n            }.bind(this);\r\n\r\n            var countThreadDone = 0;\r\n            var callBackThread = function (threadId) {\r\n                countThreadDone++;\r\n                if (countThreadDone == maxThread) {\r\n                    resolve(totLoaded); //tra ve tong so luong bit nhan duoc\r\n                }\r\n            }\r\n\r\n            for (var j = 0; j < maxThread; j++) {\r\n                //console.log(\"Thread \" + j);\r\n                testStream(j, j * delayThread, 1, callBackThread); //chay tu step 1\r\n            }\r\n        })\r\n            .then(data => {\r\n                //reset interval clear no di\r\n                clearInterval(interval);\r\n                //Tra ve chu XONG!\r\n                this.postCommand(\"progress\", \"download\", { progress: 1, contermet: contermet });\r\n\r\n                this.postCommand(\"finish\", \"download\", { speed: contermet });\r\n\r\n                return 'DOWNLOAD STOP!'; //tra ve cho phien goi no\r\n\r\n            });\r\n    }\r\n\r\n    //3. test upload\r\n    upload() {\r\n        totLoaded = 0.0;\r\n        progress = 0;\r\n        contermet = '...';\r\n        xhr = []; //bat dau tao multithread\r\n        var maxThread = 10; //so luong chay 10 thread\r\n        var maxStep = 20; //moi luong chay qua 20 step\r\n        var durationTestInSecond = 15 //so giay chay test thu\r\n        var maxTime_ms = (durationTestInSecond / 2) * 1000; //thoi gian thu 10 s hoac 20 buoc\r\n\r\n        var delayThread = 300;\r\n\r\n        var overheadCompensationFactor = 1.06; //can be changed to compensatie for transport overhead. (see doc.md for some other values)\r\n        var useMebibits: false;\r\n\r\n        var graceTimeDone = false; //bo thoi gian parse TCP de tinh toc do cho chinh xac \r\n        var time_ulGraceTime = 3 //time to wait in seconds before actually measuring dl speed (wait for TCP window to increase)\r\n        var startT = new Date().getTime(); // timestamp when test was started\r\n\r\n\r\n        this.postCommand(\"init\", \"upload\");\r\n\r\n        interval = setInterval(function () {\r\n\r\n            //console.log('gui thong bao tien trinh: ' + totLoaded);\r\n            var passTime = new Date().getTime() - startT;\r\n            if (graceTimeDone) progress = passTime / (durationTestInSecond * 1000);\r\n            //reset thoi gian bat dau tinh toan toc doc\r\n            if (!graceTimeDone) {\r\n                if (passTime > 1000 * time_ulGraceTime) {\r\n                    if (totLoaded > 0) { // if the connection is so slow that we didn't get a single chunk yet, do not reset\r\n                        startT = new Date().getTime(); //bat dau tinh thoi gian download\r\n                        totLoaded = 0.0;               //reset bien lai\r\n                    }\r\n                    graceTimeDone = true;\r\n                }\r\n            } else {\r\n                var speed = totLoaded / (passTime / 1000.0)\r\n                contermet = ((speed * 8 * overheadCompensationFactor) / (useMebibits ? 1048576 : 1000000)).toFixed(2) // speed is multiplied by 8 to go from bytes to bits, overhead compensation is applied, then everything is divided by 1048576 or 1000000 to go to megabits/mebibits\r\n                //dua ve qua trinh\r\n\r\n                this.postCommand(\"progress\", \"upload\", { progress: progress, contermet: contermet });\r\n\r\n                if (progress >= 1) {\r\n                    console.log('SLOW NETWORK for Upload!');\r\n                    this.clearRequests();\r\n                }\r\n            }\r\n\r\n            //qua trinh = thoi gian troi qua chia cho thoi gian du dinh chay thu\r\n        }.bind(this), 200); //cu 200ms thi thong bao ket qua cho contermet\r\n\r\n        return new Promise((resolve, reject) => {\r\n            startT = new Date().getTime(); // timestamp when test was started\r\n            var testStream = function (i, delay, step, doneThread) {\r\n                //chay 1 lan delay\r\n                setTimeout(function () {\r\n                    let timeout = new Date().getTime() - startT;\r\n                    //console.log(\"test thread: \" + i + \", step: \" + step + ', timeout: ' + timeout);\r\n                    this.uploadOne(i, step) //tien trinh nay chay rat cham neu mang cham\r\n                        .then(total => {\r\n                            //console.log(\"A Step in a Thread: \" + i + \" finish Total loaded:\");\r\n                            if (timeout < maxTime_ms && step < maxStep) { //dieu kien nao den truoc \r\n                                try { xhr[i].unsubcriber() } catch (e) { } // reset the stream data to empty ram\r\n                                testStream(i, 0, step + 1, doneThread); //goi tiep bien a\r\n                            } else {\r\n                                if (doneThread) doneThread(i) //bao xong thread so i\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            if (doneThread) doneThread(i)\r\n                        });\r\n                }.bind(this), 1 + delay)\r\n            }.bind(this);\r\n\r\n            var countThreadDone = 0;\r\n            var callBackThread = function (threadId) {\r\n                countThreadDone++;\r\n                if (countThreadDone == maxThread) {\r\n                    resolve(totLoaded); //tra ve tong so luong bit nhan duoc\r\n                }\r\n            }\r\n\r\n            for (var j = 0; j < maxThread; j++) {\r\n                //console.log(\"Thread \" + j);\r\n                testStream(j, j * delayThread, 1, callBackThread); //chay tu step 1\r\n            }\r\n        })\r\n            .then(data => {\r\n                //reset interval clear no di\r\n                clearInterval(interval);\r\n                this.postCommand(\"progress\", \"upload\", { progress: 1, contermet: contermet });\r\n                this.postCommand(\"finish\", \"upload\", { speed: contermet });\r\n                return 'UPLOAD STOP!'; //tra ve cho phien goi no\r\n            });\r\n    }\r\n\r\n    //3. ping and jitter\r\n    ping() {\r\n        var ping = 0.0 // current ping value\r\n        var jitter = 0.0 // current jitter value\r\n        var i = 0 // counter of pongs received\r\n        var prevInstspd = 0 // last ping time, used for jitter calculation\r\n        const count_ping = 10;\r\n        const ping_allowPerformanceApi = true;\r\n        var pingStatus;\r\n        var jitterStatus;\r\n\r\n        xhr = [];\r\n\r\n        var startT = new Date().getTime(); // timestamp when test was started\r\n\r\n        this.postCommand(\"init\", \"ping\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            // ping function\r\n            var doPing = function () {\r\n                progress = i / count_ping;\r\n                startT = new Date().getTime();\r\n\r\n                this.pingOne(0)\r\n                    .then(result => {\r\n                        //console.log(\"A Step in a Thread: \" + i + \" finish Total loaded:\");\r\n                        //console.log(result);\r\n                        if (i === 0) {\r\n                            startT = new Date().getTime() // first pong\r\n                        } else {\r\n                            var instspd = new Date().getTime() - startT\r\n                            if (ping_allowPerformanceApi) {\r\n                                try {\r\n                                    //try to get accurate performance timing using performance api\r\n                                    var p;\r\n                                    p = performance.getEntries();\r\n                                    p = p[p.length - 1];\r\n                                    var d = p.responseStart - p.requestStart //best precision: chromium-based\r\n                                    if (d <= 0) d = p.duration; //edge: not so good precision because it also considers the overhead and there is no way to avoid it\r\n                                    if (d > 0 && d < instspd) instspd = d;\r\n                                } catch (e) {\r\n                                    console.log('Performance API not supported, using estimate')\r\n                                }\r\n                            }\r\n                            var instjitter = Math.abs(instspd - prevInstspd)\r\n                            if (i === 1) ping = instspd; /* first ping, can't tell jitter yet*/ else {\r\n                                ping = instspd < ping ? instspd : ping * 0.8 + instspd * 0.2 // update ping, weighted average. if the instant ping is lower than the current average, it is set to that value instead of averaging\r\n                                if (i === 2) jitter = instjitter //discard the first jitter measurement because it might be much higher than it should be\r\n                                else\r\n                                    jitter = instjitter > jitter ? (jitter * 0.3 + instjitter * 0.7) : (jitter * 0.8 + instjitter * 0.2) // update jitter, weighted average. spikes in ping values are given more weight.\r\n                            }\r\n                            prevInstspd = instspd\r\n                        }\r\n                        pingStatus = ping.toFixed(2);\r\n                        jitterStatus = jitter.toFixed(2);\r\n                        i++\r\n\r\n\r\n                        if (i < count_ping) {\r\n                            doPing();\r\n                            //continue .. postMessage\r\n                            this.postCommand(\"progress\", \"ping\", { progress: progress, contermet: pingStatus });\r\n                        }\r\n                        else {\r\n                            progress = 1;\r\n                            resolve({\r\n                                ping: pingStatus,\r\n                                jitter: jitterStatus\r\n                            })\r\n                        } // more pings to do?\r\n                    })\r\n                    .catch(err => {\r\n                        //truong hop da reset ket qua gui ve sau thi\r\n                        console.log(err);\r\n                        reject({\r\n                            code: 403,\r\n                            message: 'fail!',\r\n                            err: err\r\n                        })\r\n                    });\r\n\r\n            }.bind(this);\r\n\r\n            doPing() // start first ping\r\n\r\n        })\r\n            .then(data => {\r\n                //ping xong roi\r\n                var dataPing;\r\n                dataPing = data;\r\n                //console.log('data:');\r\n\r\n                this.postCommand(\"progress\", \"ping\", { progress: 1, contermet: dataPing.ping });\r\n                this.postCommand(\"finish\", \"ping\", { ping: dataPing.ping, jitter: dataPing.jitter });\r\n\r\n\r\n                return data;\r\n            })\r\n            .catch(err => {\r\n                console.log('err');\r\n                console.log(err);\r\n                throw err; //tra ve xu ly o phien toi\r\n            });\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiSpeedTestService.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/map'\r\n\r\nimport NodeRSA from 'node-rsa';\r\nimport jwt from 'jsonwebtoken';\r\n\r\n@Injectable()\r\nexport class ApiAuthService {\r\n\r\n    public authenticationServer = 'https://cuongdq-oauth.herokuapp.com';\r\n    public clientKey = new NodeRSA({ b: 512 }, { signingScheme: 'pkcs1-sha256' }); //for decrypte\r\n    public midleKey = new NodeRSA(null, { signingScheme: 'pkcs1-sha256' }); //for test\r\n    public serverKey = new NodeRSA(null, { signingScheme: 'pkcs1-sha256' }); //for crypte\r\n    public publicKey: any;\r\n    public userToken: any;\r\n    public userSetting: any;\r\n    public userInfo: any;\r\n\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n        //key nay de test thu noi bo\r\n        this.midleKey.importKey(this.clientKey.exportKey('public'));\r\n    }\r\n\r\n    getSpeedtestServerList() {\r\n        return this.httpClient.get(this.authenticationServer + '/speedtest-server')\r\n            .toPromise()\r\n            .then(jsonData => {\r\n                //console.log(jsonData); //tien xu ly truoc khi tra ve main\r\n                return jsonData;\r\n            });\r\n    }\r\n\r\n    getServerPublicRSAKey() {\r\n        if (this.publicKey && this.publicKey.PUBLIC_KEY) {\r\n            return (new Promise((resolve, reject) => {\r\n                try {\r\n                    this.serverKey.importKey(this.publicKey.PUBLIC_KEY);\r\n                } catch (err) {\r\n                    reject(err); //bao loi khong import key duoc\r\n                }\r\n                resolve(this.serverKey);\r\n            }));\r\n\r\n        } else {\r\n            return this.httpClient.get(this.authenticationServer + '/key-json')\r\n                .toPromise()\r\n                .then(jsonData => {\r\n                    this.publicKey = jsonData;\r\n                    if (this.publicKey && this.publicKey.PUBLIC_KEY) {\r\n                        try {\r\n                            this.serverKey.importKey(this.publicKey.PUBLIC_KEY);\r\n                        } catch (err) {\r\n                            throw err;\r\n                        }\r\n                        return this.serverKey;\r\n                    } else {\r\n                        throw new Error('No PUBLIC_KEY exists!');\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    login(formData) {\r\n        return this.httpClient.post(this.authenticationServer + '/login', formData)\r\n            .toPromise() //chuyen doi 200 -> then #200->catch\r\n            .then(data => {\r\n                //neu tra ve status=200 thi o day\r\n                this.userToken = data;\r\n                return this.userToken.token;\r\n            }); //cac trang thai 403,404 thi se ve catch\r\n    }\r\n\r\n    pushToken(token){\r\n        //gan token cho user de xem nhu da login\r\n        this.userToken={token:token};\r\n    }\r\n\r\n    logout() {\r\n        if (this.userToken && this.userToken.token) {\r\n            //truong hop user co luu tren session thi xoa session di\r\n            let req = { Authorization: 'Bearer ' + this.userToken.token };\r\n            return this.httpClient.post(this.authenticationServer + '/logout', JSON.stringify(req))\r\n                .toPromise()\r\n                .then(data => {\r\n                    console.log(data);\r\n                    this.userToken = null; //reset token nay\r\n                    return data; //tra ve nguyen mau data cho noi goi logout xu ly\r\n                })\r\n                .catch(err => {\r\n                    //xem nhu da logout khong cap luu tru\r\n                    console.log(err);\r\n                    this.userToken = null; //reset token nay\r\n                    return err; //tra ve nguyen mau data cho noi goi logout xu ly\r\n                });\r\n        } else {\r\n            return (new Promise((resolve, reject) => {\r\n                resolve({ status: 'ok', message: 'Logout susccess!' });\r\n            }));\r\n\r\n        }\r\n    }\r\n\r\n    register(formData) {\r\n        return this.httpClient.post(this.authenticationServer + '/register', formData)\r\n            .toPromise()\r\n            .then(data => {\r\n                return data;\r\n            });\r\n\r\n    }\r\n\r\n    editUser(formData) {\r\n        return this.httpClient.post(this.authenticationServer + '/user/save', formData)\r\n            .toPromise()\r\n            .then(data => {\r\n                return data;\r\n            });\r\n\r\n    }\r\n    //lay thong tin nguoi dung de edit\r\n    getEdit() {\r\n        if (this.userToken && this.userToken.token) {\r\n            let jsonRequest = { Authorization: 'Bearer ' + this.userToken.token };\r\n            return this.httpClient.post(this.authenticationServer + '/api/user-settings', JSON.stringify(jsonRequest))\r\n                .toPromise()\r\n                .then(jsonData => {\r\n                    this.userSetting = jsonData;\r\n                    return jsonData;\r\n                });\r\n        } else {\r\n            return (new Promise((resolve, reject) => {\r\n                this.userSetting = null;\r\n                reject({ error: 'No token, please login first' }); //bao loi khong import key duoc\r\n            }));\r\n        }\r\n    }\r\n    //tren cung site thi khong dung den\r\n    //khong dung header de control\r\n\r\n    //cac thong tin lay tu client memory\r\n    //get token for post or get with authentication\r\n    getUserToken() {\r\n        return this.userToken.token;\r\n    }\r\n\r\n    //get userInfo from token\r\n    getUserInfo() {\r\n        //this.userInfo=null;\r\n        try {\r\n            this.userInfo = jwt.decode(this.userToken.token);\r\n            //console.log(this.userInfo);\r\n            //chuyen doi duong dan image de truy cap anh dai dien\r\n            if (this.userInfo.image\r\n                &&\r\n                this.userInfo.image.toLowerCase()\r\n                &&\r\n                this.userInfo.image.toLowerCase().indexOf('http://') < 0\r\n                &&\r\n                this.userInfo.image.toLowerCase().indexOf('https://') < 0) {\r\n                //chuyen doi duong dan lay tai nguyen tai he thong\r\n                this.userInfo.image = this.authenticationServer\r\n                    + '/resources/user-image/'\r\n                    + this.userInfo.image\r\n                    + '?token=' + this.userToken.token;\r\n                //console.log(this.userInfo.image);\r\n            }\r\n        } catch (err) {\r\n            this.userInfo = null;\r\n        }\r\n        return this.userInfo;\r\n    }\r\n\r\n    getUserInfoSetting() {\r\n        if (this.userSetting.URL_IMAGE\r\n            &&\r\n            this.userSetting.URL_IMAGE.toLowerCase()\r\n            &&\r\n            this.userSetting.URL_IMAGE.toLowerCase().indexOf('http://') < 0\r\n            &&\r\n            this.userSetting.URL_IMAGE.toLowerCase().indexOf('https://') < 0) {\r\n            //chuyen doi duong dan lay tai nguyen tai he thong\r\n            this.userSetting.URL_IMAGE = this.authenticationServer\r\n                + '/resources/user-image/'\r\n                + this.userSetting.URL_IMAGE\r\n                + '?token=' + this.userToken.token;\r\n            //console.log(this.userSetting.URL_IMAGE);\r\n        }\r\n        return this.userSetting;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiAuthService.ts","\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ApiLocationService {\r\n\r\n    public locationTracking;\r\n    public currenLocation;\r\n\r\n    constructor(private geoLocation: Geolocation) { }\r\n\r\n    getCurrentLocation(){\r\n        //chuyen doi vi tri tra ve vi tri hien tai theo thuat toan\r\n        if (this.currenLocation){\r\n            return new Promise((resolve,reject)=>{\r\n                resolve(this.currenLocation)\r\n            })\r\n        }else{\r\n            return this.init();\r\n        }\r\n    }\r\n\r\n    init() {\r\n        return new Promise((resolve,reject)=>{\r\n            this.stopTracking();\r\n            this.geoLocation.getCurrentPosition({\r\n                enableHighAccuracy: true,\r\n                timeout: 10000,\r\n                maximumAge: 7000\r\n            }).then((pos) => {\r\n                //console.log('current get ok');\r\n                this.currenLocation = pos;\r\n                this.currenLocation.timereturn = new Date().getTime(); \r\n                this.startTracking();\r\n                resolve(this.currenLocation);\r\n            }).catch((err) => {\r\n                //console.log('error get current');\r\n                console.log(err);\r\n                this.startTracking();\r\n                reject(err);\r\n            });       \r\n        })\r\n\r\n    }\r\n    //Theo dõi thay đổi vị trí\r\n    startTracking() {\r\n        this.locationTracking = this.geoLocation.watchPosition({\r\n            enableHighAccuracy: true,\r\n            timeout: 5000,\r\n            maximumAge: 3000\r\n        })\r\n            .subscribe((pos) => {\r\n\r\n                //console.log('tracking get Ok');\r\n                this.currenLocation = pos;\r\n                this.currenLocation.timereturn = new Date().getTime(); //thoi gian tinh ms hien tai\r\n            },\r\n                err => {\r\n                    // console.log('error get tracking');\r\n                    console.log(err);\r\n                }\r\n            )\r\n    }\r\n\r\n    stopTracking() {\r\n        try { this.locationTracking.unsubscribe() } catch (e) { };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiLocationService.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\n\r\nimport { ApiSpeedTestService } from '../services/apiSpeedTestService';\r\nimport { ApiAuthService } from '../services/apiAuthService';\r\nimport { ApiImageService } from '../services/apiImageService';\r\nimport { ApiGraphService } from '../services/apiMeterGraphService';\r\nimport { ApiStorageService } from '../services/apiStorageService';\r\nimport { ApiLocationService } from '../services/apiLocationService'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    Geolocation,\r\n    ApiGraphService,\r\n    ApiImageService,\r\n    ApiAuthService,\r\n    ApiStorageService,\r\n    ApiSpeedTestService,\r\n    ApiLocationService,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { HomePage } from '../pages/home/home';\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = HomePage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 376\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// util (ignored)\n// module id = 378\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// buffer (ignored)\n// module id = 413\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// crypto (ignored)\n// module id = 414\n// module chunks = 0","\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ApiImageService {\r\n    constructor() { }\r\n    //dua vao doi tuong file image\r\n    //tra ve doi tuong file image co kich co nho hon\r\n    resizeImage(filename: string, file: File, newSize: number) {\r\n        return new Promise((resolve, reject) => {\r\n            try {\r\n                var canvas = document.createElement('canvas');\r\n                var context = canvas.getContext('2d');\r\n                var maxW = newSize;\r\n                var maxH = newSize;\r\n                var img = document.createElement('img');\r\n                img.src = URL.createObjectURL(file);\r\n                img.onload = () => {\r\n                    var iw = img.width;\r\n                    var ih = img.height;\r\n                    var scale = Math.min((maxW / iw), (maxH / ih));\r\n                    var iwScaled = iw * scale;\r\n                    var ihScaled = ih * scale;\r\n                    canvas.width = iwScaled;\r\n                    canvas.height = ihScaled;\r\n                    context.drawImage(img, 0, 0, iwScaled, ihScaled);\r\n                    //image.src=canvas.toDataURL(); //gan canvas cho image viewer\r\n                    //xu ly chat luong anh qua cac tham so cua ham toDataURL()\r\n                    //chuyen sang file de ghi xuong dia hoac truyen tren mang\r\n                    //su dung ham toBlob sau\r\n                    canvas.toBlob((blob) => {\r\n                        var reader = new FileReader();\r\n                        reader.readAsArrayBuffer(blob);//ket qua la mot mang Uint8Array \r\n                        reader.onload = () => { //hoac tham so ketqua.target.result == reader.result\r\n                            //console.log(reader.result); //ket qua la mot mang Uint8Array \r\n                            //newFile la mot file image da duoc resize roi nhe\r\n                            resolve({\r\n                                imageViewer: canvas.toDataURL(),//gan cho img.src= this.src \r\n                                file: new Blob([reader.result], { type: 'image/png' }),\r\n                                name: filename\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiImageService.ts","import { Inject, Injectable } from '@angular/core';\r\nimport { LOCAL_STORAGE, StorageService, isStorageAvailable } from 'angular-webstorage-service';\r\n \r\nconst STORAGE_KEY = 'Cng@3500888';\r\nconst sessionStorageAvailable = isStorageAvailable(sessionStorage); \r\n\r\n@Injectable()\r\nexport class ApiStorageService {\r\n \r\n    constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) {\r\n    }\r\n \r\n    public doSomethingAwesome(): number {\r\n        const awesomenessLevel: number = this.storage.get(STORAGE_KEY) || 1337;\r\n        this.storage.set(STORAGE_KEY, awesomenessLevel + 1);\r\n        return awesomenessLevel;\r\n    }\r\n\r\n    save(key,value){\r\n        this.storage.set(key, value);\r\n    }\r\n    read(key){\r\n        return this.storage.get(key);\r\n    }\r\n\r\n    delete(key){\r\n        this.storage.remove(key);\r\n    }\r\n\r\n    getStatus(){\r\n        return `Session storage available: ${sessionStorageAvailable}`;\r\n    }\r\n\r\n    saveToken(value){\r\n        this.save('token',value);\r\n    }\r\n\r\n    getToken(){\r\n       return this.read('token');\r\n    }\r\n\r\n    deleteToken(){\r\n        this.delete('token');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/apiStorageService.ts"],"sourceRoot":""}